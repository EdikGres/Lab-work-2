#include "Functions.h"

//#include <ctype.h>

/*
	ТЗ: Ввести строку, вывести на экран только слова начинающиеся с гласной буквы. ( 8 вариант )
	V1.0
		+ Сделать функцию определения гласная ли буква и на большие гласные тоже
		+ Сделать определение размера массива
		+ Сделать перебор и получение каждой буквы массива через итератор
		+ Сделать условия для первого слова и последующих по типу char[iterator+1] != ' ', т.е. отслеживаю на пробел
		+ Сделать ввод символов с клавиатуры либо printf в цикле как-то, но без контейнеров не получится скорее всего. А делать расширяемый массив долго для этой лабы,
			найти другую функцию для лабы. Ну или printf но char[] сделать большим. Решил сделать fgets(char[], int maxSimbols, stdin)

	V1.1
		+ Тестирование на ошибки. (fgets не позволит выйти за массив.)

	V1.2
		+ Задать русскую локаль

	V2.0
		- Сделать реакцию на русские символы(гласные) (НЕ ПОЛУЧАЕТСЯ нужно гуглить символы char для кириллицы(?))
		+ Сделать так, чтобы не выводились знаки пунктуации вместе со словами (в условия вписать проверку или функцию )
		+ Сделать код красивее и комментарии

	V3.0 
		+ Переделал всё и добавил функцию isalpha


	(P.s) выравнивание кода ctrl+K => ctrl+D
*/




void main() {
	using namespace func;
	//printf("%i", isalpha('a'))

	char* locale = setlocale(LC_ALL, ""); //Задаём русскую локаль

	char text[120];

	printf("Введите строку(120 simbols max): ");
	fgets(text, 120, stdin);

	//printf("%s\n", text); //вывести исходный текст, дебаг
	int lenght = 0;
	while (text[lenght] != 0) //Получаем длину массива через цикл
	{
		lenght++;
	}

	int iterator = 0; //перебор массива через итератор

	for (; iterator < lenght; iterator++)
	{
		if (isVowel(text[iterator]) && !isalpha(text[iterator - 1]))
		{

			for (; iterator < lenght && isalpha(text[iterator]); iterator++)
			{
				printf("%c", text[iterator]);



			}
			printf("\n");
		}


	}





}


